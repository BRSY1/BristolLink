# Generated by Django 5.0.6 on 2025-02-06 17:02

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import pgcrypto.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Blacklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    pgcrypto.fields.EncryptedEmailField(
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        max_length=254,
                        versioned=False,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "submitter_email",
                    pgcrypto.fields.EncryptedEmailField(
                        blank=True,
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        max_length=254,
                        null=True,
                        versioned=False,
                    ),
                ),
                (
                    "receiver_email",
                    pgcrypto.fields.EncryptedEmailField(
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        max_length=254,
                        versioned=False,
                    ),
                ),
                (
                    "notification_type",
                    pgcrypto.fields.EncryptedCharField(
                        charset="utf-8",
                        check_armor=True,
                        choices=[
                            ("submission", "Crush Submission"),
                            ("match", "Match Found"),
                            ("rejection", "Crush Rejection"),
                        ],
                        cipher="aes",
                        versioned=False,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                (
                    "created_at",
                    pgcrypto.fields.EncryptedDateTimeField(
                        blank=True,
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        editable=False,
                        versioned=False,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "username",
                    pgcrypto.fields.EncryptedCharField(
                        charset="utf-8", check_armor=True, cipher="aes", versioned=False
                    ),
                ),
                (
                    "email",
                    pgcrypto.fields.EncryptedEmailField(
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        max_length=254,
                        primary_key=True,
                        serialize=False,
                        versioned=False,
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "verification_code",
                    models.UUIDField(default=uuid.uuid4, editable=False),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "matched_at",
                    pgcrypto.fields.EncryptedDateTimeField(
                        blank=True,
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        editable=False,
                        versioned=False,
                    ),
                ),
                (
                    "user1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_as_first_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="matches_as_second_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Crush",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "crush_name",
                    pgcrypto.fields.EncryptedCharField(
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        help_text="The name of your crush",
                        versioned=False,
                    ),
                ),
                (
                    "crush_email",
                    pgcrypto.fields.EncryptedEmailField(
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        help_text="The email of your crush",
                        max_length=254,
                        versioned=False,
                    ),
                ),
                (
                    "message",
                    pgcrypto.fields.EncryptedTextField(
                        blank=True,
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        help_text="Optional message for your crush",
                        null=True,
                        versioned=False,
                    ),
                ),
                (
                    "created_at",
                    pgcrypto.fields.EncryptedDateTimeField(
                        blank=True,
                        charset="utf-8",
                        check_armor=True,
                        cipher="aes",
                        editable=False,
                        versioned=False,
                    ),
                ),
                (
                    "submitter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submitted_crushes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("submitter", "crush_email")},
            },
        ),
    ]
